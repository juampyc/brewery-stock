/* v2 fixes:
  - Bloqueo real de borrar marca con etiquetas asociadas (también por estilos de la marca)
  - Modal etiquetas: flujo brand -> checkbox -> (custom habilita nombre y deshabilita estilo; normal al revés)
  - Al editar etiqueta y cambiar qty: backend actualiza movimiento 'add' correspondiente
  - Se mantienen confirmaciones, lock de botones, truncado de IDs, etc.
*/
const API_BASE = "https://script.google.com/macros/s/AKfycby06OCBmeItYdCTwIoVP2dfwF6txRVylG-EOTAb9qA76YuzmXxQgcA3SoCkiaXdUIx0/exec";
const CAN_STATES=["final","pasteurizada_sin_etiquetar","sin_pasteurizar_etiquetada","sin_pasteurizar_sin_etiquetar"];

const Toast=Swal.mixin({toast:true,position:"top-end",showConfirmButton:false,timer:1700,timerProgressBar:true,didOpen:t=>{t.addEventListener("mouseenter",Swal.stopTimer);t.addEventListener("mouseleave",Swal.resumeTimer);}});
function lockBtn(btn){if(!btn)return()=>{};const prev={d:btn.disabled,h:btn.innerHTML};btn.disabled=true;btn.innerHTML=`<span class="spinner-border spinner-border-sm"></span> ${btn.textContent||"Procesando…"}`;return()=>{btn.disabled=prev.d;btn.innerHTML=prev.h};}
async function withBtnLock(btn,fn){const u=lockBtn(btn);try{return await fn();}finally{u();}}
function confirmDelete(text="¿Eliminar este registro?"){return Swal.fire({icon:"warning",title:"Confirmar",text,showCancelButton:true,confirmButtonText:"Eliminar",cancelButtonText:"Cancelar"});}

async function apiGet(entity,action="getAll",extra={}){const p=new URLSearchParams({entity,action,...extra});const r=await fetch(`${API_BASE}?${p.toString()}`);if(!r.ok)throw new Error(`GET ${entity}/${action} ${r.status}`);return r.json();}
async function apiPost(entity,data,action){const url=action?`${API_BASE}?entity=${entity}&action=${action}`:`${API_BASE}?entity=${entity}`;const r=await fetch(url,{method:"POST",body:JSON.stringify(data||{})});const j=await r.json();if(!r.ok||j.error)throw new Error(j.error||`POST ${entity}/${action||""} ${r.status}`);return j;}
async function apiDelete(entity,id){return apiPost(entity,{id},"delete");}

function initTheme(){const sw=document.getElementById("themeSwitch");const saved=localStorage.getItem("theme")||"light";document.documentElement.setAttribute("data-theme",saved);if(sw){sw.checked=saved==="dark";sw.addEventListener("change",()=>{const t=sw.checked?"dark":"light";document.documentElement.setAttribute("data-theme",t);localStorage.setItem("theme",t);});}}
function renderIdShort(id){return id?id.slice(0,8):""}
function renderColorSquare(c){return c?`<span class="color-box" style="background:${c}"></span>`:""}
function renderDateLocal(s){if(!s)return"";const d=new Date(s);if(!isNaN(d))return d.toLocaleString();const m=String(s).match(/^(\d{4}-\d{2}-\d{2})[ T](\d{2}):(\d{2})/);return m?`${m[1]} ${m[2]}:${m[3]}`:s;}
const nowInputDateTime=()=>{const d=new Date();return `${d.getFullYear()}-${String(d.getMonth()+1).padStart(2,"0")}-${String(d.getDate()).padStart(2,"0")}T${String(d.getHours()).padStart(2,"0")}:${String(d.getMinutes()).padStart(2,"0")}`;}
function fromDatetimeLocalValue(v){if(!v)return null;return v.replace("T"," ")+":00";}
function truncateIdsInDesc(txt){if(!txt)return"";let s=String(txt);s=s.replace(/\b(labelId|styleId|brandId)=([0-9a-f]{8})[0-9a-f\-]*/gi,(_,k,p)=>`${k}=${p}`);s=s.replace(/usados:([0-9a-f\-:,]+)/gi,m=>{const list=m.split(":")[1]||"";const mapped=list.split(",").map(p=>{const[a,q]=p.split(":");return `${(a||"").slice(0,8)}:${q||""}`}).join(",");return`usados:${mapped}`});return s;}

/* ===== Index ===== */
async function renderIndex(){try{const[styles,cans,emptycans,labels]=await Promise.all([apiGet("styles"),apiGet("cans"),apiGet("emptycans"),apiGet("labels")]);const sumByStyle=new Map(styles.map(s=>[String(s.id),0]));for(const c of cans){sumByStyle.set(String(c.styleId),(sumByStyle.get(String(c.styleId))||0)+Number(c.qty||0));}const names=[],qtys=[];for(const s of styles){const tot=sumByStyle.get(String(s.id))||0;if(s.showAlways||tot>0){names.push(`${s.brandName}-${s.name}`);qtys.push(tot);}}const c1=document.getElementById("idx_total_cans"),c2=document.getElementById("idx_total_emptycans"),c3=document.getElementById("idx_total_labels");if(c1)c1.textContent=cans.reduce((a,x)=>a+Number(x.qty||0),0);if(c2)c2.textContent=emptycans.reduce((a,x)=>a+Number(x.qty||0),0);if(c3)c3.textContent=labels.reduce((a,x)=>a+Number(x.qty||0),0);if(window.Chart){const ctx=document.getElementById("idx_chart_styles");if(ctx)new Chart(ctx,{type:"bar",data:{labels:names,datasets:[{label:"Stock de latas por estilo",data:qtys}]},options:{responsive:true,plugins:{legend:{display:false}},scales:{y:{beginAtZero:true}}}});const ctx2=document.getElementById("idx_chart_labels");if(ctx2){const totals=new Map(styles.map(s=>[String(s.id),0]));for(const l of labels){if(!l.isCustom)totals.set(String(l.styleId),(totals.get(String(l.styleId))||0)+Number(l.qty||0));}const n2=[],q2=[];for(const s of styles){const t=totals.get(String(s.id))||0;if(s.showAlways||t>0){n2.push(`${s.brandName}-${s.name}`);q2.push(t);}}new Chart(ctx2,{type:"bar",data:{labels:n2,datasets:[{label:"Etiquetas disponibles",data:q2}]},options:{responsive:true,plugins:{legend:{display:false}},scales:{y:{beginAtZero:true}}}})}}catch(e){console.error(e);}}

/* ===== Movements ===== */
function renderMovementsTable(list){const tb=document.querySelector("#movementsTable tbody");if(!tb)return;tb.innerHTML="";for(const row of list){const tr=document.createElement("tr");tr.innerHTML=`<td>${renderIdShort(row.id)}</td><td>${renderDateLocal(row.dateTime)}</td><td>${row.entity||""}</td><td>${row.type||""}</td><td>${row.qty??0}</td><td>${truncateIdsInDesc(row.description||"")}</td><td>${renderDateLocal(row.lastModified)}</td>`;tb.appendChild(tr);}}
async function bootMovements(){try{const rows=await apiGet("movements");renderMovementsTable(rows);}catch(e){console.error(e);}}

/* ===== Producción + Empty Cans ===== */
async function loadProductionData(){const[styles,cans]=await Promise.all([apiGet("styles"),apiGet("cans")]);const byStyle=new Map();for(const s of styles)byStyle.set(String(s.id),{style:s,totals:{final:0,pasteurizada_sin_etiquetar:0,sin_pasteurizar_etiquetada:0,sin_pasteurizar_sin_etiquetar:0}});for(const c of cans){if(!byStyle.has(String(c.styleId)))continue;const acc=byStyle.get(String(c.styleId));const st=String(c.state||"");const q=Number(c.qty||0);if(acc.totals[st]!=null)acc.totals[st]+=q;}renderProductionTable(Array.from(byStyle.values()));}
function renderProductionTable(rows){const tb=document.querySelector("#prod_table tbody");if(!tb)return;tb.innerHTML="";for(const r of rows){const{style,totals}=r;const tr=document.createElement("tr");tr.innerHTML=`<td>${style.brandName||""}</td><td>${style.name||""}</td><td class="text-end">${totals.final}</td><td class="text-end">${totals.pasteurizada_sin_etiquetar}</td><td class="text-end">${totals.sin_pasteurizar_etiquetada}</td><td class="text-end">${totals.sin_pasteurizar_sin_etiquetar}</td><td>—</td><td class="text-nowrap"><button class="btn btn-sm btn-primary me-1" onclick="openRegisterProduction(this,'${style.id}')">Registrar</button><button class="btn btn-sm btn-outline-secondary" onclick="openTransition(this,'${style.id}')">Cambiar estado</button></td>`;tb.appendChild(tr);}}
async function openRegisterProduction(btn,styleId){await withBtnLock(btn,async()=>{try{const[styles,labels]=await Promise.all([apiGet("styles"),apiGet("labels")]);const style=styles.find(s=>String(s.id)===String(styleId))||styles[0];const styleOpts=styles.map(s=>`<option value="${s.id}" ${String(s.id)===String(styleId)?"selected":""}>${s.brandName} - ${s.name}</option>`).join("");const optStyle=labels.filter(l=>!l.isCustom&&String(l.styleId)===String(style.id)).map(l=>`<option value="${l.id}">${l.styleName||style.name}</option>`).join("");const optCustom=labels.filter(l=>!!l.isCustom).map(l=>`<option value="${l.id}">(custom) ${l.name}</option>`).join("");const html=`<div class="mb-2"><label class="form-label fw-semibold">Estilo</label><select id="rp_style" class="form-select">${styleOpts}</select></div><div class="row g-2"><div class="col-sm-4"><label class="form-label fw-semibold">Cantidad</label><input id="rp_qty" type="number" class="form-control" value="24" min="1"></div><div class="col-sm-4"><label class="form-label fw-semibold">Fecha/hora</label><input id="rp_dt" type="datetime-local" class="form-control" value="${nowInputDateTime()}"></div></div><div class="form-check mt-2"><input class="form-check-input" type="checkbox" id="rp_labeled"><label class="form-check-label" for="rp_labeled">Etiquetada</label></div><div class="mb-2 d-none" id="rp_label_wrap"><label class="form-label fw-semibold">Etiqueta a consumir</label><select id="rp_label" class="form-select"><option value="">(usar etiquetas por estilo)</option>${optStyle}${optCustom?`<optgroup label="Personalizadas">${optCustom}</optgroup>`:""}</select></div><div class="form-check mt-2"><input class="form-check-input" type="checkbox" id="rp_pasteurized"><label class="form-check-label" for="rp_pasteurized">Pasteurizada</label></div>`;const res=await Swal.fire({title:"Registrar producción",html,showCancelButton:true,focusConfirm:false,didOpen:()=>{const cb=document.getElementById("rp_labeled");const w=document.getElementById("rp_label_wrap");cb.addEventListener("change",()=>w.classList.toggle("d-none",!cb.checked));},preConfirm:()=>({styleId:document.getElementById("rp_style").value,qty:Math.max(1,Number(document.getElementById("rp_qty").value||0)),dateTime:fromDatetimeLocalValue(document.getElementById("rp_dt").value),labeled:document.getElementById("rp_labeled").checked,pasteurized:document.getElementById("rp_pasteurized").checked,labelId:document.getElementById("rp_label").value})});if(!res.isConfirmed)return;await apiPost("production",res.value,"produce");Toast.fire({icon:"success",title:"Producción registrada"});await loadProductionData();}catch(err){console.error(err);Swal.fire("Error",err.message||"No se pudo registrar la producción","error");}});}
async function openTransition(btn,styleId){await withBtnLock(btn,async()=>{try{const[styles,labels]=await Promise.all([apiGet("styles"),apiGet("labels")]);const style=styles.find(s=>String(s.id)===String(styleId))||styles[0];const optStyle=labels.filter(l=>!l.isCustom&&String(l.styleId)===String(style.id)).map(l=>`<option value="${l.id}">${l.styleName||style.name}</option>`).join("");const optCustom=labels.filter(l=>!!l.isCustom).map(l=>`<option value="${l.id}">(custom) ${l.name}</option>`).join("");const html=`<div class="mb-2"><b>${style.brandName} - ${style.name}</b></div><div class="row g-2"><div class="col-sm-4"><label class="form-label fw-semibold">Cantidad</label><input id="ts_qty" type="number" class="form-control" value="12" min="1"></div><div class="col-sm-4"><label class="form-label fw-semibold">Fecha/hora</label><input id="ts_dt" type="datetime-local" class="form-control" value="${nowInputDateTime()}"></div></div><div class="mb-2"><label class="form-label fw-semibold">Pasar a estado</label><select id="ts_to" class="form-select"><option value="final">Final (lista)</option><option value="pasteurizada_sin_etiquetar">Pasteurizada sin etiquetar</option><option value="sin_pasteurizar_etiquetada">Sin pasteurizar y etiquetada</option><option value="sin_pasteurizar_sin_etiquetar">Sin pasteurizar y sin etiquetar</option></select></div><div class="form-check mt-2"><input class="form-check-input" type="checkbox" id="ts_consume_labels"><label class="form-check-label" for="ts_consume_labels">Consumir etiquetas si el destino es etiquetado</label></div><div class="mb-2 d-none" id="ts_label_wrap"><label class="form-label fw-semibold">Etiqueta a consumir</label><select id="ts_label" class="form-select"><option value="">(usar etiquetas por estilo)</option>${optStyle}${optCustom?`<optgroup label="Personalizadas">${optCustom}</optgroup>`:""}</select></div>`;const res=await Swal.fire({title:"Cambiar estado",html,showCancelButton:true,focusConfirm:false,didOpen:()=>{const cb=document.getElementById("ts_consume_labels");const wrap=document.getElementById("ts_label_wrap");const sel=document.getElementById("ts_to");function t(){const needs=/etiquetad/i.test(sel.value);wrap.classList.toggle("d-none",!needs||!cb.checked);}cb.addEventListener("change",t);sel.addEventListener("change",t);t();},preConfirm:()=>({qty:Math.max(1,Number(document.getElementById("ts_qty").value||0)),dateTime:fromDatetimeLocalValue(document.getElementById("ts_dt").value),toState:document.getElementById("ts_to").value,consumeLabels:document.getElementById("ts_consume_labels").checked,labelId:document.getElementById("ts_label").value})});if(!res.isConfirmed)return;const p=res.value;await apiPost("cans",{styleId,fromState:"",toState:p.toState,qty:p.qty,dateTime:p.dateTime,consumeLabels:p.consumeLabels,labelId:p.labelId},"transition_state");Toast.fire({icon:"success",title:"Estado actualizado"});await loadProductionData();}catch(err){console.error(err);Swal.fire("Error",err.message||"No se pudo cambiar el estado","error");}});}
async function openAddEmptyCans(btn){await withBtnLock(btn,async()=>{const html=`<div class="row g-2"><div class="col-sm-4"><label class="form-label fw-semibold">Cantidad</label><input id="ec_qty" type="number" class="form-control" value="24" min="1"></div><div class="col-sm-4"><label class="form-label fw-semibold">Fecha/hora</label><input id="ec_dt" type="datetime-local" class="form-control" value="${nowInputDateTime()}"></div></div><div class="row g-2 mt-1"><div class="col-sm-6"><label class="form-label fw-semibold">Proveedor (opcional)</label><input id="ec_provider" class="form-control"></div><div class="col-sm-6"><label class="form-label fw-semibold">Lote (opcional)</label><input id="ec_lot" class="form-control"></div></div>`;const res=await Swal.fire({title:"Ingresar latas vacías",html,showCancelButton:true,focusConfirm:false,preConfirm:()=>({qty:Math.max(1,Number(document.getElementById("ec_qty").value||0)),dateTime:fromDatetimeLocalValue(document.getElementById("ec_dt").value),provider:document.getElementById("ec_provider").value||"",lot:document.getElementById("ec_lot").value||""})});if(!res.isConfirmed)return;await apiPost("emptycans",res.value,"add");Toast.fire({icon:"success",title:"Ingreso registrado"});await loadProductionData();});}
async function bootProduction(){await loadProductionData();document.getElementById("btnNewProduction")?.addEventListener("click",e=>openRegisterProduction(e.currentTarget));document.getElementById("btnAddEmptyCans")?.addEventListener("click",e=>openAddEmptyCans(e.currentTarget));}

/* ===== Config (delete brand guard enhanced) ===== */
function brandModalBody(d={}){return`<div class="mb-2"><label class="form-label fw-semibold">Nombre</label><input id="brandName" class="form-control" value="${d.name||""}"></div><div class="mb-2 text-center"><label class="form-label fw-semibold d-block">Color</label><input id="brandColor" type="color" class="form-control form-control-color mx-auto" value="${d.color||"#000000"}"></div>`}
function containersModalBody(d={}){return`<div class="mb-2"><label class="form-label fw-semibold">Nombre</label><input id="containerName" class="form-control" value="${d.name||""}"></div><div class="mb-2"><label class="form-label fw-semibold">Tamaño (L)</label><input id="containerSize" type="number" class="form-control" value="${d.sizeLiters||0}"></div><div class="mb-2"><label class="form-label fw-semibold">Tipo</label><select id="containerType" class="form-select"><option value="lata" selected>Lata</option></select></div><div class="mb-2 text-center"><label class="form-label fw-semibold d-block">Color</label><input id="containerColor" type="color" class="form-control form-control-color mx-auto" value="${d.color||"#000000"}"></div>`}
function styleModalBody(brands,d={}){const brandOpts=brands.map(b=>`<option value="${b.id}" ${String(b.id)===String(d.brandId)?"selected":""}>${b.name}</option>`).join("");return`<div class="mb-2"><label class="form-label fw-semibold">Marca</label><select id="styleBrandId" class="form-select">${brandOpts}</select></div><div class="mb-2"><label class="form-label fw-semibold">Nombre del estilo</label><input id="styleName" class="form-control" value="${d.name||""}"></div><div class="mb-2 text-center"><label class="form-label fw-semibold d-block">Color</label><input id="styleColor" type="color" class="form-control form-control-color mx-auto" value="${d.color||"#000000"}"></div><div class="form-check mt-2"><input class="form-check-input" type="checkbox" id="styleShow" ${d.showAlways?"checked":""}><label class="form-check-label" for="styleShow">Mostrar siempre en gráficos</label></div>`}
async function loadConfig(){const[brands,containers,styles]=await Promise.all([apiGet("brands"),apiGet("containers"),apiGet("styles")]);const tbB=document.querySelector("#brandsTable tbody");if(tbB){tbB.innerHTML="";for(const b of brands){const tr=document.createElement("tr");tr.innerHTML=`<td>${renderIdShort(b.id)}</td><td>${b.name}</td><td>${renderColorSquare(b.color)}</td><td class="text-nowrap"><button class="btn btn-sm btn-outline-secondary me-1" data-id="${b.id}" data-entity="brands">Editar</button><button class="btn btn-sm btn-danger" data-id="${b.id}" data-entity="brands">Eliminar</button></td>`;tbB.appendChild(tr);}tbB.addEventListener("click",async e=>{const btn=e.target.closest("button");if(!btn)return;const id=btn.dataset.id,ent=btn.dataset.entity;if(btn.classList.contains("btn-danger")){await withBtnLock(btn,async()=>{const labels=await apiGet("labels");const stylesCur=await apiGet("styles");const styleIds=new Set(stylesCur.filter(s=>String(s.brandId)===String(id)).map(s=>String(s.id)));const blocked=labels.some(l=>String(l.brandId)===String(id)||styleIds.has(String(l.styleId)));if(blocked){Swal.fire("No permitido","No se puede eliminar la marca: tiene etiquetas asociadas.","info");return;}const ok=await confirmDelete("¿Eliminar la marca seleccionada?");if(!ok.isConfirmed)return;await apiDelete(ent,id);Toast.fire({icon:"success",title:"Eliminado"});await loadConfig();});}else{await withBtnLock(btn,async()=>{const b=brands.find(x=>String(x.id)===String(id));const{value,isConfirmed}=await Swal.fire({title:"Editar marca",html:brandModalBody(b),showCancelButton:true,focusConfirm:false,preConfirm:()=>({name:document.getElementById("brandName").value,color:document.getElementById("brandColor").value})});if(!isConfirmed)return;await apiPost("brands",{id,...value},"update");Toast.fire({icon:"success",title:"Guardado"});await loadConfig();});}});document.getElementById("btnAddBrand")?.addEventListener("click",e=>withBtnLock(e.currentTarget,async()=>{const{value,isConfirmed}=await Swal.fire({title:"Agregar marca",html:brandModalBody({}),showCancelButton:true,focusConfirm:false,preConfirm:()=>({name:document.getElementById("brandName").value,color:document.getElementById("brandColor").value})});if(!isConfirmed)return;await apiPost("brands",value,"create");Toast.fire({icon:"success",title:"Agregado"});await loadConfig();}));}
const tbC=document.querySelector("#containersTable tbody");if(tbC){tbC.innerHTML="";for(const c of containers){const tr=document.createElement("tr");tr.innerHTML=`<td>${renderIdShort(c.id)}</td><td>${c.name}</td><td>${c.sizeLiters||""}</td><td>${c.type||""}</td><td>${renderColorSquare(c.color)}</td><td class="text-nowrap"><button class="btn btn-sm btn-outline-secondary me-1" data-id="${c.id}" data-entity="containers">Editar</button><button class="btn btn-sm btn-danger" data-id="${c.id}" data-entity="containers">Eliminar</button></td>`;tbC.appendChild(tr);}tbC.addEventListener("click",async e=>{const btn=e.target.closest("button");if(!btn)return;const id=btn.dataset.id,ent=btn.dataset.entity;if(btn.classList.contains("btn-danger")){await withBtnLock(btn,async()=>{const ok=await confirmDelete("¿Eliminar el envase seleccionado?");if(!ok.isConfirmed)return;await apiDelete(ent,id);Toast.fire({icon:"success",title:"Eliminado"});await loadConfig();});}else{await withBtnLock(btn,async()=>{const c=containers.find(x=>String(x.id)===String(id));const{value,isConfirmed}=await Swal.fire({title:"Editar envase",html:containersModalBody(c),showCancelButton:true,focusConfirm:false,preConfirm:()=>({name:document.getElementById("containerName").value,sizeLiters:Number(document.getElementById("containerSize").value||0),type:document.getElementById("containerType").value,color:document.getElementById("containerColor").value})});if(!isConfirmed)return;await apiPost("containers",{id,...value},"update");Toast.fire({icon:"success",title:"Guardado"});await loadConfig();});}});document.getElementById("btnAddContainer")?.addEventListener("click",e=>withBtnLock(e.currentTarget,async()=>{const{value,isConfirmed}=await Swal.fire({title:"Agregar envase",html:containersModalBody({}),showCancelButton:true,focusConfirm:false,preConfirm:()=>({name:document.getElementById("containerName").value,sizeLiters:Number(document.getElementById("containerSize").value||0),type:document.getElementById("containerType").value,color:document.getElementById("containerColor").value})});if(!isConfirmed)return;await apiPost("containers",value,"create");Toast.fire({icon:"success",title:"Agregado"});await loadConfig();}));}
const tbS=document.querySelector("#stylesTable tbody");if(tbS){tbS.innerHTML="";const brandMap=new Map(brands.map(b=>[String(b.id),b]));for(const s of styles){const tr=document.createElement("tr");tr.innerHTML=`<td>${renderIdShort(s.id)}</td><td>${brandMap.get(String(s.brandId))?.name||""}</td><td>${s.name}</td><td>${renderColorSquare(s.color)}</td><td>${s.showAlways?"Sí":"No"}</td><td class="text-nowrap"><button class="btn btn-sm btn-outline-secondary me-1" data-id="${s.id}" data-entity="styles">Editar</button><button class="btn btn-sm btn-danger" data-id="${s.id}" data-entity="styles">Eliminar</button></td>`;tbS.appendChild(tr);}tbS.addEventListener("click",async e=>{const btn=e.target.closest("button");if(!btn)return;const id=btn.dataset.id,ent=btn.dataset.entity;if(btn.classList.contains("btn-danger")){await withBtnLock(btn,async()=>{const ok=await confirmDelete("¿Eliminar el estilo seleccionado?");if(!ok.isConfirmed)return;await apiDelete(ent,id);Toast.fire({icon:"success",title:"Eliminado"});await loadConfig();});}else{await withBtnLock(btn,async()=>{const s=styles.find(x=>String(x.id)===String(id));const{value,isConfirmed}=await Swal.fire({title:"Editar estilo",html:styleModalBody(brands,s),showCancelButton:true,focusConfirm:false,preConfirm:()=>({brandId:document.getElementById("styleBrandId").value,name:document.getElementById("styleName").value,color:document.getElementById("styleColor").value,showAlways:document.getElementById("styleShow").checked})});if(!isConfirmed)return;await apiPost("styles",{id,...value},"update");Toast.fire({icon:"success",title:"Guardado"});await loadConfig();});}});document.getElementById("btnAddStyle")?.addEventListener("click",e=>withBtnLock(e.currentTarget,async()=>{const{value,isConfirmed}=await Swal.fire({title:"Agregar estilo",html:styleModalBody(brands,{}),showCancelButton:true,focusConfirm:false,preConfirm:()=>({brandId:document.getElementById("styleBrandId").value,name:document.getElementById("styleName").value,color:document.getElementById("styleColor").value,showAlways:document.getElementById("styleShow").checked})});if(!isConfirmed)return;await apiPost("styles",value,"create");Toast.fire({icon:"success",title:"Agregado"});await loadConfig();}));}}
async function bootConfig(){await loadConfig();}

/* ===== Labels modal (brand -> checkbox -> toggle) ===== */
function labelModalBody(brands,styles,d={}){const brandOpts=brands.map(b=>`<option value="${b.id}" ${String(b.id)===String(d.brandId)?"selected":""}>${b.name}</option>`).join("");const styleOpts=styles.map(s=>`<option value="${s.id}" ${String(s.id)===String(d.styleId)?"selected":""}>${s.name}</option>`).join("");return`<div class="mb-2"><label class="form-label fw-semibold">Marca</label><select id="lblBrandId" class="form-select" required>${brandOpts}</select></div><div class="form-check mt-1 mb-2"><input class="form-check-input" type="checkbox" id="lblIsCustom" ${d.isCustom?"checked":""}><label class="form-check-label fw-semibold" for="lblIsCustom">Es personalizada</label></div><div class="row g-2"><div class="col-sm-6"><label class="form-label fw-semibold">Estilo</label><select id="lblStyleId" class="form-select">${styleOpts}</select></div><div class="col-sm-6"><label class="form-label fw-semibold">Nombre (personalizado)</label><input id="lblName" class="form-control" value="${d.name||""}" placeholder="Solo si es personalizada"></div></div><div class="row g-2 mt-1"><div class="col-sm-3"><label class="form-label fw-semibold">Cantidad</label><input id="lblQty" type="number" class="form-control" value="${d.qty||0}" min="0"></div><div class="col-sm-3"><label class="form-label fw-semibold">Fecha/hora</label><input id="lblDt" type="datetime-local" class="form-control" value="${nowInputDateTime()}"></div><div class="col-sm-3"><label class="form-label fw-semibold">Proveedor</label><input id="lblProvider" class="form-control" value="${d.provider||""}"></div><div class="col-sm-3"><label class="form-label fw-semibold">Lote</label><input id="lblLot" class="form-control" value="${d.lot||""}"></div></div>`}
function hookLabelModalToggle(){const brandSel=document.getElementById("lblBrandId");const isCustomCb=document.getElementById("lblIsCustom");const styleSel=document.getElementById("lblStyleId");const nameInp=document.getElementById("lblName");function apply(){const hasBrand=!!brandSel.value;isCustomCb.disabled=!hasBrand;if(!hasBrand){styleSel.disabled=true;nameInp.disabled=true;return;}const custom=isCustomCb.checked;styleSel.disabled=custom;nameInp.disabled=!custom;}brandSel.addEventListener("change",apply);isCustomCb.addEventListener("change",apply);apply();}
function collectLabelPayload(){const brandId=document.getElementById("lblBrandId").value;if(!brandId){Swal.showValidationMessage("Primero seleccione la Marca.");return null;}const custom=document.getElementById("lblIsCustom").checked;const styleSel=document.getElementById("lblStyleId");const nameInp=document.getElementById("lblName");if(!custom && !styleSel.value){Swal.showValidationMessage("Seleccione un Estilo (o marque 'Es personalizada').");return null;}if(custom){/* nombre libre opcional */}else{ if(nameInp.value){Swal.showValidationMessage("Nombre personalizado solo si es 'Es personalizada'.");return null;} }const qty=Number(document.getElementById("lblQty").value||0);if(qty<0){Swal.showValidationMessage("Cantidad inválida.");return null;}return{brandId,styleId:custom?"":styleSel.value,name:custom?nameInp.value:"",qty,dateTime:fromDatetimeLocalValue(document.getElementById("lblDt").value),provider:document.getElementById("lblProvider").value,lot:document.getElementById("lblLot").value,isCustom:custom};}

async function loadLabelsPage(){const[brands,styles]=await Promise.all([apiGet("brands"),apiGet("styles")]);let labels=await apiGet("labels");const brandMap=new Map(brands.map(b=>[String(b.id),b]));const styleMap=new Map(styles.map(s=>[String(s.id),s]));const tbody=document.querySelector("#labelsTable tbody");if(!tbody)return;function refreshCards(){document.getElementById("lbl_total_units").textContent=labels.reduce((a,x)=>a+Number(x.qty||0),0);document.getElementById("lbl_total_items").textContent=labels.length;document.getElementById("lbl_last_mod").textContent=labels.reduce((m,x)=>m&&new Date(m)>new Date(x.lastModified)?m:x.lastModified,null)||"—";}
function render(){tbody.innerHTML="";for(const l of labels){const tr=document.createElement("tr");tr.innerHTML=`<td>${renderIdShort(l.id)}</td><td>${brandMap.get(String(l.brandId))?.name||""}</td><td>${l.isCustom?(l.name||"custom"):(styleMap.get(String(l.styleId))?.name||"")}</td><td>${l.qty||0}</td><td>${l.lot||""}</td><td>${l.provider||""}</td><td>${renderDateLocal(l.dateTime)}</td><td>${renderDateLocal(l.lastModified)}</td><td class="text-nowrap"><button class="btn btn-sm btn-outline-secondary me-1" data-id="${l.id}">Editar</button><button class="btn btn-sm btn-danger" data-id="${l.id}">Eliminar</button></td>`;tbody.appendChild(tr);}refreshCards();}
render();
document.getElementById("btnAddLabel")?.addEventListener("click",e=>withBtnLock(e.currentTarget,async()=>{const{value,isConfirmed}=await Swal.fire({title:"Agregar etiqueta",html:labelModalBody(brands,styles,{}),showCancelButton:true,focusConfirm:false,didOpen:hookLabelModalToggle,preConfirm:collectLabelPayload});if(!isConfirmed||!value)return;await apiPost("labels",value,"create");labels=await apiGet("labels");render();Toast.fire({icon:"success",title:"Agregado"});}));
tbody.addEventListener("click",async e=>{const btn=e.target.closest("button");if(!btn)return;const id=btn.dataset.id;if(btn.classList.contains("btn-danger")){await withBtnLock(btn,async()=>{const ok=await confirmDelete("¿Eliminar la etiqueta seleccionada?");if(!ok.isConfirmed)return;await apiDelete("labels",id);labels=await apiGet("labels");render();Toast.fire({icon:"success",title:"Eliminada"});});}else{await withBtnLock(btn,async()=>{const l=(await apiGet("labels")).find(x=>String(x.id)===String(id));const{value,isConfirmed}=await Swal.fire({title:"Editar etiqueta",html:labelModalBody(brands,styles,l),showCancelButton:true,focusConfirm:false,didOpen:hookLabelModalToggle,preConfirm:collectLabelPayload});if(!isConfirmed||!value)return;await apiPost("labels",{id,...value},"update");labels=await apiGet("labels");render();Toast.fire({icon:"success",title:"Guardado"});});}});}

async function boot(){initTheme();if(document.getElementById("idx_chart_styles"))await renderIndex();if(document.getElementById("movementsTable"))await bootMovements();if(document.getElementById("prod_table"))await bootProduction();if(document.getElementById("brandsTable"))await bootConfig();if(document.getElementById("labelsTable"))await loadLabelsPage();}
if(document.readyState==="loading")document.addEventListener("DOMContentLoaded",boot);else boot();
